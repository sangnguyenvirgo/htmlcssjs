{"ast":null,"code":"var _jsxFileName = \"/home/soang/htmlcssjs/some-hook-2/src/components/UseEffect2.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n/*\n1. useEffect({callBack})\n-goi callBack moi khi component duoc re-render\n2. useEffect({callBack, []})\nchi goi lai callBack mot lan sau khi component duoc  mounted\n3. useEffect({callBack}, [deps])\ncallBack duoc goi lai sau moi khi deps duoc thay doi\n*/\n//----------------------------------------//\n/*\n1. callback luon duoc goi sau khi conponents mounted\n\n\ncallBack luon duoc goi sau khi component duoc \n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tab = ['posts', 'comments', 'albums'];\nconst UseEffect2 = () => {\n  _s();\n  const [toggle, setToggle] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [type, setType] = useState('posts');\n  const [showGoToStop, setShowGoToStop] = useState(false);\n  const handleCallApi = () => {\n    setToggle(!toggle);\n  };\n\n  // function to top\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    if (toggle) {\n      fetch(`https://jsonplaceholder.typicode.com/${type}`).then(res => res.json()).then(posts => {\n        setPosts(posts);\n      });\n    }\n  }, [toggle]);\n  useEffect(() => {\n    const handleScroll = () => {\n      window.scrollY >= 200 ? setShowGoToStop(true) : setShowGoToStop(false);\n    };\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [tab.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setType(tab);\n        handleCallApi();\n      },\n      className: type === tab ? 'text-black bg-red-500' : '',\n      children: tab\n    }, tab, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)), toggle && /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"list-decimal list-inside\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: post.title || post.body\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), showGoToStop && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"fixed right-6 bottom-7\",\n      onClick: scrollToTop,\n      children: \"Go to top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(UseEffect2, \"gQU96irJWQCvExydwFnZt2FWu10=\");\n_c = UseEffect2;\nexport default UseEffect2;\n\n/*\nuseEffect hook:\n\nuseEffect là một hook trong React được sử dụng để thực thi các hành động phụ (side effects) trong functional components. Các hành động phụ có thể bao gồm gọi API, tương tác với DOM, hoặc thực hiện các thao tác không đồng bộ khác.\nTham số đầu vào của useEffect:\n\nTham số đầu tiên của useEffect là một hàm effect. Hàm này sẽ được thực thi sau mỗi lần render.\nTrong đoạn mã của bạn, hàm effect là một hàm với logic gọi API để lấy danh sách bài viết từ URL cung cấp. Hàm này chỉ được gọi khi toggle thay đổi.\nTham số thứ hai của useEffect:\n\nTham số thứ hai của useEffect là một mảng dependency. useEffect sẽ chỉ được gọi lại nếu một hoặc nhiều phần tử trong mảng này thay đổi so với lần render trước đó.\nTrong trường hợp này, mảng dependency chỉ có một phần tử là toggle. Điều này có nghĩa là hàm effect sẽ chỉ được gọi lại khi giá trị của toggle thay đổi.\nThực thi hành động phụ:\n\nKhi toggle thay đổi và trở thành true, useEffect sẽ gọi API để lấy danh sách bài viết từ URL. Khi dữ liệu được trả về từ API, nó sẽ được cập nhật vào state posts bằng cách sử dụng hàm setPosts.\n*/\nvar _c;\n$RefreshReg$(_c, \"UseEffect2\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","tab","UseEffect2","_s","toggle","setToggle","posts","setPosts","type","setType","showGoToStop","setShowGoToStop","handleCallApi","scrollToTop","window","scrollTo","top","behavior","fetch","then","res","json","handleScroll","scrollY","addEventListener","children","map","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","post","title","body","id","_c","$RefreshReg$"],"sources":["/home/soang/htmlcssjs/some-hook-2/src/components/UseEffect2.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n/*\n1. useEffect({callBack})\n-goi callBack moi khi component duoc re-render\n2. useEffect({callBack, []})\nchi goi lai callBack mot lan sau khi component duoc  mounted\n3. useEffect({callBack}, [deps])\ncallBack duoc goi lai sau moi khi deps duoc thay doi\n*/\n//----------------------------------------//\n/*\n1. callback luon duoc goi sau khi conponents mounted\n\n\ncallBack luon duoc goi sau khi component duoc \n*/\n\nconst tab= ['posts', 'comments', 'albums'];\n\nconst UseEffect2 = () => {\n    const [toggle, setToggle] = useState(false);\n    const [posts, setPosts] = useState([]);\n    const [type, setType] = useState('posts');\n    const [showGoToStop, setShowGoToStop] = useState(false);\n\n\n    const handleCallApi=() => {\n        setToggle(!toggle);\n    }\n\n    // function to top\n    const scrollToTop=()=>{\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    };\n\n    useEffect(()=>{\n        if(toggle) {\n            fetch(`https://jsonplaceholder.typicode.com/${type}`)\n            .then(res=>res.json())\n            .then(posts=>{\n                setPosts(posts);\n            });\n        }\n    }, [toggle]);\n\n\n    useEffect(()=>{\n        const handleScroll = () =>{\n            (window.scrollY>=200) ? setShowGoToStop(true):setShowGoToStop(false);\n        }\n\n        window.addEventListener('scroll', handleScroll);\n    }, [])\n\n\n\n    return (\n        <div>\n        {tab.map(tab=>(\n            <button \n                key={tab}\n                onClick={() =>{setType(tab); handleCallApi();}}\n                className={type===tab ? 'text-black bg-red-500': ''}\n                >\n                {tab}\n            </button>\n        ))}\n\n\n        {toggle && (\n            <ol className='list-decimal list-inside'>\n                {posts.map(post=>(\n                        <li key={post.id}>{post.title || post.body}</li>\n                        ))}\n            </ol>\n        )}\n\n\n        {/* the gototop button  */}\n        {showGoToStop&& (\n            <button className='fixed right-6 bottom-7' onClick={scrollToTop} >\n                Go to top\n            </button>\n        )}\n\n        </div>\n    );\n}\n\nexport default UseEffect2;\n\n\n/*\nuseEffect hook:\n\nuseEffect là một hook trong React được sử dụng để thực thi các hành động phụ (side effects) trong functional components. Các hành động phụ có thể bao gồm gọi API, tương tác với DOM, hoặc thực hiện các thao tác không đồng bộ khác.\nTham số đầu vào của useEffect:\n\nTham số đầu tiên của useEffect là một hàm effect. Hàm này sẽ được thực thi sau mỗi lần render.\nTrong đoạn mã của bạn, hàm effect là một hàm với logic gọi API để lấy danh sách bài viết từ URL cung cấp. Hàm này chỉ được gọi khi toggle thay đổi.\nTham số thứ hai của useEffect:\n\nTham số thứ hai của useEffect là một mảng dependency. useEffect sẽ chỉ được gọi lại nếu một hoặc nhiều phần tử trong mảng này thay đổi so với lần render trước đó.\nTrong trường hợp này, mảng dependency chỉ có một phần tử là toggle. Điều này có nghĩa là hàm effect sẽ chỉ được gọi lại khi giá trị của toggle thay đổi.\nThực thi hành động phụ:\n\nKhi toggle thay đổi và trở thành true, useEffect sẽ gọi API để lấy danh sách bài viết từ URL. Khi dữ liệu được trả về từ API, nó sẽ được cập nhật vào state posts bằng cách sử dụng hàm setPosts.\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}